 commentaire.belongsTo(article, { as: "article", foreignKey: "code_article"});
  article.hasMany(commentaire, { as: "commentaires", foreignKey: "code_article"});
  contenu.belongsTo(article, { as: "article", foreignKey: "code_article"});
  article.hasMany(contenu, { as: "contenus", foreignKey: "code_article"});
  stock.belongsTo(article, { as: "article", foreignKey: "code_article"});
  article.hasMany(stock, { as: "stocks", foreignKey: "code_article"});
  commande.belongsTo(boutique, { as: "boutique", foreignKey: "id_boutique"});
  boutique.hasMany(commande, { as: "commandes", foreignKey: "id_boutique"});
  stock.belongsTo(boutique, { as: "boutique", foreignKey: "id_boutique"});
  boutique.hasMany(stock, { as: "stocks", foreignKey: "id_boutique"});
  adresse.belongsTo(client, { as: "client", foreignKey: "id_client"});
  client.hasMany(adresse, { as: "adresses", foreignKey: "id_client"});
  commande.belongsTo(client, { as: "id_client_client", foreignKey: "id_client"});
  client.hasMany(commande, { as: "commandes", foreignKey: "id_client"});
  commentaire.belongsTo(client, { as: "client", foreignKey: "id_client"});
  client.hasMany(commentaire, { as: "commentaires", foreignKey: "id_client"});
  facture.belongsTo(client, { as: "client", foreignKey: "id_client"});
  client.hasMany(facture, { as: "factures", foreignKey: "id_client"});
  contenu.belongsTo(commande, { as: "commande", foreignKey: "n_commande"});
  commande.hasMany(contenu, { as: "contenus", foreignKey: "n_commande"});
  facture.belongsTo(commande, { as: "commande", foreignKey: "n_commande"});
  commande.hasMany(facture, { as: "factures", foreignKey: "n_commande"});
  adresse.belongsTo(pays, { as: "pays", foreignKey: "id_pays"});
  pays.hasMany(adresse, { as: "adresses", foreignKey: "id_pays"});
  facture.belongsTo(pays, { as: "pays", foreignKey: "id_pays"});
  pays.hasMany(facture, { as: "factures", foreignKey: "id_pays"});
  ville.belongsTo(pays, { as: "pays", foreignKey: "id_pays"});
  pays.hasMany(ville, { as: "villes", foreignKey: "id_pays"});
  adresse.belongsTo(ville, { as: "ville", foreignKey: "id_ville"});
  ville.hasMany(adresse, { as: "adresses", foreignKey: "id_ville"});
  facture.belongsTo(ville, { as: "ville", foreignKey: "id_ville"});
  ville.hasMany(facture, { as: "factures", foreignKey: "id_ville"});